name: Docker image CI

on:
  push:
    branches:
      - main
    paths:
      - '.github/**'
      - '12.17/**'
      - '13.13/**'
      - '14.10/**'
      - '15.5/**'
      - '16.1/**'
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  build-docker-images:
    runs-on: [ubuntu-20.04]

    strategy:
      fail-fast: false
      matrix:
        version: [12.17-bookworm, 13.13-bookworm, 14.10-bookworm, 15.5-bookworm, 16.1-bookworm]
        include:
          - version: 12.17-bookworm
            docker-context: 12.17/debian/default
            docker-tags: |
              nicoherbigde/postgresql:12.17
              nicoherbigde/postgresql:12.17-bookworm
          - version: 13.13-bookworm
            docker-context: 13.13/debian/default
            docker-tags: |
              nicoherbigde/postgresql:13.13
              nicoherbigde/postgresql:13.13-bookworm
          - version: 14.10-bookworm
            docker-context: 14.10/debian/default
            docker-tags: |
              nicoherbigde/postgresql:14.10
              nicoherbigde/postgresql:14.10-bookworm
          - version: 15.5-bookworm
            docker-context: 15.5/debian/default
            docker-tags: |
              nicoherbigde/postgresql:15.5
              nicoherbigde/postgresql:15.5-bookworm
          - version: 16.1-bookworm
            docker-context: 16.1/debian/default
            docker-tags: |
              nicoherbigde/postgresql:16.1
              nicoherbigde/postgresql:16.1-bookworm

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image and Push it to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.docker-context }}
          no-cache: true
          pull: true
          push: true
          tags: ${{ matrix.docker-tags }}

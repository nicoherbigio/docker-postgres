name: Docker image CI

on:
  push:
    branches:
      - main
    paths:
      - '.github/**'
      - '11.17/**'
      - '12.12/**'
      - '13.8/**'
      - '14.5/**'
      - '15.0/**'
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  build-docker-images:
    runs-on: [ubuntu-20.04]

    strategy:
      fail-fast: false
      matrix:
        version: [11.17-bullseye, 12.12-bullseye, 13.8-bullseye, 14.5-bullseye, 15.0-bullseye]
        include:
          - version: 11.17-bullseye
            docker-context: 11.17/debian/default
            docker-tags: |
              nicoherbigde/postgresql:11.17
              nicoherbigde/postgresql:11.17-bullseye
          - version: 12.12-bullseye
            docker-context: 12.12/debian/default
            docker-tags: |
              nicoherbigde/postgresql:12.12
              nicoherbigde/postgresql:12.12-bullseye
          - version: 13.8-bullseye
            docker-context: 13.8/debian/default
            docker-tags: |
              nicoherbigde/postgresql:13.8
              nicoherbigde/postgresql:13.8-bullseye
          - version: 14.5-bullseye
            docker-context: 14.5/debian/default
            docker-tags: |
              nicoherbigde/postgresql:14.5
              nicoherbigde/postgresql:14.5-bullseye
          - version: 15.0-bullseye
            docker-context: 15.0/debian/default
            docker-tags: |
              nicoherbigde/postgresql:15.0
              nicoherbigde/postgresql:15.0-bullseye

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image and Push it to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.docker-context }}
          no-cache: true
          pull: true
          push: true
          tags: ${{ matrix.docker-tags }}

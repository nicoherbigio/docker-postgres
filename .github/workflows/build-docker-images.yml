name: Docker image CI

on:
  push:
    branches:
      - main
    paths:
      - '.github/**'
      - '12.19/**'
      - '13.15/**'
      - '14.12/**'
      - '15.7/**'
      - '16.2/**'
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  build-docker-images:
    runs-on: [ubuntu-20.04]

    strategy:
      fail-fast: false
      matrix:
        version: [12.19-bookworm, 13.15-bookworm, 14.12-bookworm, 15.7-bookworm, 16.2-bookworm]
        include:
          - version: 12.19-bookworm
            docker-context: 12.19/debian/default
            docker-tags: |
              nicoherbigde/postgresql:12.19
              nicoherbigde/postgresql:12.19-bookworm
          - version: 13.15-bookworm
            docker-context: 13.15/debian/default
            docker-tags: |
              nicoherbigde/postgresql:13.15
              nicoherbigde/postgresql:13.15-bookworm
          - version: 14.12-bookworm
            docker-context: 14.12/debian/default
            docker-tags: |
              nicoherbigde/postgresql:14.12
              nicoherbigde/postgresql:14.12-bookworm
          - version: 15.7-bookworm
            docker-context: 15.7/debian/default
            docker-tags: |
              nicoherbigde/postgresql:15.7
              nicoherbigde/postgresql:15.7-bookworm
          - version: 16.2-bookworm
            docker-context: 16.2/debian/default
            docker-tags: |
              nicoherbigde/postgresql:16.2
              nicoherbigde/postgresql:16.2-bookworm

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image and Push it to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.docker-context }}
          no-cache: true
          pull: true
          push: true
          tags: ${{ matrix.docker-tags }}
